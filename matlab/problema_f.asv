matrices;

%% Ganancias del sistema
k_st = 180/pi; k_a = 100; k_c = 10e-3;

%% Sistema
s = tf('s');
cnt = k_c / s; % Controlador proporcional
sys = ss(A, B, C, 0);
Ls = cnt * k_a * sys * k_st; % Lazo Directo

%% Margen de fase y ganancia
[mg, mf, wg, wp] = margin(Ls);
disp('Margen de ganancia: ')
disp(mg)

%% Diagrama de Nyquist con MG y MF
f1 = figure(1);
np = nyquistplot(Ls);
np.Characteristics.MinimumStabilityMargins.Visible = "on";

%% Diagrama de Bode con MG y MF
f2 = figure(2);
bp = bodeplot(Ls);
bp.Characteristics.MinimumStabilityMargins.Visible = "on";

%% Ganancia y retardo critico
k_cr = mg * k_c; t_cr = deg2rad(mf) / wg;
disp('Ganancia critica: ')
disp(k_cr)
disp('Retardo critica: ')
disp(t_cr)

%% Nyquist y bode ganancia critica
sys = ss(A, B, C, 0);
Ls = cnt * k_a * sys * k_st; % Lazo Directo

[mg, mf] = margin(Ls);
disp('Margen de ganancia: ')
disp(mg)

f1 = figure(1);
np = nyquistplot(Ls);
np.Characteristics.MinimumStabilityMargins.Visible = "on";

f2 = figure(2);
bp = bodeplot(Ls);
bp.Characteristics.MinimumStabilityMargins.Visible = "on";

%% Exportar graficos
if ~exist('exportar', 'var')
  exportar = false;
end

if exportar
  matlab2tikz('figurehandle', f1, 'width', '10cm', 'height', '6cm', ...
    'interpretTickLabelsAsTex', true, 'parseStrings', false, ...
    'externalData', true, 'dataPath', './data', ...
    'relativeDataPath', 'Diagramas/data', 'nyquist_f1.tex');

  matlab2tikz('figurehandle', f2, 'width', '10cm', 'height', '6cm', ...
    'interpretTickLabelsAsTex', true, 'parseStrings', false, ...
    'externalData', true, 'dataPath',  './data', ...
    'relativeDataPath', 'Diagramas/data', 'bode_f1.tex');
end
